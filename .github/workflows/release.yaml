name: Update Release Notes

on:
  push:
    tags:
      - "release-*"

jobs:
  commits-history:
    runs-on: ubuntu-latest
    outputs:
      previous_tag: ${{ steps.get_last_two_release_tags.outputs.previous_tag }}
      lastest_tag: ${{ steps.get_last_two_release_tags.outputs.lastest_tag }}
      release_notes: ${{ steps.commit_logs.outputs.release_notes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get last two release tags
        id: get_last_two_release_tags
        run: |
          TAGS=$(git tag -l 'release-*' | sort -V | tail -n 2)
          readarray -t TAG_ARRAY <<< "$TAGS"
          echo "PREVIOUS_TAG=${TAG_ARRAY[0]}" >> $GITHUB_ENV
          echo "LATEST_TAG=${TAG_ARRAY[1]}" >> $GITHUB_ENV
          echo "previous_tag=${TAG_ARRAY[0]}" >> $GITHUB_OUTPUT
          echo "lastest_tag=${TAG_ARRAY[1]}" >> $GITHUB_OUTPUT

      - name: commit logs
        id: commit_logs
        run: |
          echo 'release_notes<<EOF' >> $GITHUB_OUTPUT
          printf "%s\n" "$(git log --pretty=format:"- %s" --grep='.*' ${{ env.PREVIOUS_TAG }}..${{ env.LATEST_TAG }})" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  # create-release-note:
  #   needs: commits-history
  #   runs-on: ubuntu-latest
  #   container: 
  #     image: ghcr.io/mzbac/mzbac/llama.cpp-docker:light
  #   steps:
  #     - name: check current directory
  #       run: |
  #         cd /llama.cpp
  #         wget https://huggingface.co/TheBloke/zephyr-7B-alpha-GGUF/resolve/main/zephyr-7b-alpha.Q5_K_M.gguf
  #         ./main -m zephyr-7b-alpha.Q5_K_M.gguf -p "hello world" 

  update-release-note:
    needs: commits-history
    runs-on: ubuntu-latest
    steps:
      - name: Update GitHub Release Notes
        run: |
          # Get release ID
          RELEASE_ID=$(curl --silent -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ needs.commits-history.outputs.lastest_tag }}" \
          | jq '.id')

          RELEASE_NOTES_ESCAPED=$(echo -n "${{ needs.commits-history.outputs.release_notes }}" | jq -Rs .)

          # Update the release
          curl --silent -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" \
          -d '{
            "body": '"$RELEASE_NOTES_ESCAPED"'
          }'
